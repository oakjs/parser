@tight-padding: 0.3em;
@normal-padding: 0.6em;
@loose-padding: 1em;

.SplitPanel {
  // border: 2px solid pink;
  position: relative;
  display: flex;
  flex: 1 0 0;

  // Fluid means take up entire space of container
  &.fluid {
    flex: 1 0 0;
  }

  &.vertical {
    // border: 2px solid red;
    height: 100%;
    flex-direction: column;    
  }

  &.horizontal {
    // border: 2px solid green;
    width: 100%;
    flex-direction: row;
  }

  /** Spacing around panes **/
  &.spaced  {
    padding: @normal-padding;
    & > .SplitPanel-spacer {
      flex: 0 0 @normal-padding;
    }
  }
  &[class*="slightly spaced"]  {
    padding: @tight-padding;
    & > .SplitPanel-spacer {
      flex: 0 0 @tight-padding;
    }
  }
  &[class*="very spaced"]  {
    padding: @loose-padding;
    & > .SplitPanel-spacer {
      flex: 0 0 @loose-padding;
    }
  }

  // Don't double space between two peer <SplitPanel space/>s.
  &.vertical.spaced + &.vertical.spaced {
     padding-left: 0;
  }
  &.horizontal.spaced + &.horizontal.spaced {
    padding-top: 0;
 }
}


// Wrapper for children
.SplitPanel-pane {
  // border: 2px solid yellow;
  position: relative;
  overflow: hidden;

  .inset(@padding: 0) {
    top: @padding; right: @padding; bottom: @padding; left: @padding;
  }
  
  // Make children take up the entire space
//  &:not(.scrolling) {
    & > * {
      position: absolute;
      width: auto;
      height: auto;
        .inset(0);
    }
    &.padded > * {
      .inset(@normal-padding);
    }
    &[class*="slightly padded"] > * {
      .inset(@tight-padding);
    }
    &[class*="very padded"] > * {
      .inset(@loose-padding);
    }
 // }

  // Make children take up the entire space
  // &.scrolling {
  //   &.padded > * {
  //     position: relative;
  //     margin: @normal-padding;
  //   }
  //   &[class*="slightly padded"] > * {
  //     margin: @tight-padding;
  //   }
  //   &[class*="very padded"] > * {
  //     margin: @loose-padding;
  //   }
  // }


  // Border for pane
  &.bordered {
    border: 1px solid rgba(34,36,38,.15)
  }

  // Padding for pane
  &.padded {
    padding: @normal-padding;
  }
  &[class*="slightly padded"] {
    padding: @tight-padding;
  }
  &[class*="very padded"] {
    padding: @loose-padding;
  }

  // Raised for pane
  &.raised {
    background: white;
    box-shadow: 0 1px 2px 0 rgba(34,36,38,.15);      
  }

  // Rounded for pane
  &.rounded {
    border-radius: .28571429rem;
  }

  // Scrolling for pane
  &.scrolling {
    overflow: auto;
  }
}

// Sizer element between children when resizable
.SplitPanel-sizer {
  flex: 0 0 12px;
  cursor: col-resize;
}

.vertical.SplitPanel > .SplitPanel-sizer {
  cursor: row-resize;
}
