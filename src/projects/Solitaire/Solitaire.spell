// # Klondike Solitaire Card Game
-- Automatically moves cards to foundation piles (aces).
-- See [wikipedia](https://en.wikipedia.org/wiki/Klondike_(solitaire)) for naming conventions.

## Game bits
a card-game is an app
a card-game has a score as a number
set the game to a new card-game
print the game

// set up deck of cards
set the deck to a new deck
set up the deck

set droppable-piles to a new list
set auto-play-piles to a new list

// set up stock pile: unplayed cards
a stock-pile is a pile
a stock-pile "can pick up (a card)" if: the card is its bottom card 
set the stock to a new stock-pile

// set up discards: where played cards go when turning over stock
a discard-pile is a pile
a discard-pile "can pick up (a card)" if: the card is its bottom card 
set discards to a new discard-pile
add discards to auto-play-piles

// set up foundation piles: where we build up from ace => king
a foundation is a pile
a foundation "can pick up (a card)" if: never
a foundation "can play (a card)" if: 
	if the suit of the foundation is not the suit of the card return no
	return the value of the foundation + 1 is the value of the card
set the foundations to a new list of foundations
for each suit in card suits
	get a new foundation with suit = the suit
	add it to the foundations
	add it to droppable-piles
	
// set up tableau piles: where cards are initially dealt
a tableau is a pile
a tableau "can pick up (a card)" if:
	if the card is face up return yes
	return the card is the bottom card of the tableau
a tableau "can play (a card)" if: 
	if the tableau is empty
		return the card is a king
	if the color of the tableau is the color of the card return no
	return the value of the tableau is the value of the card + 1
set the tableaus to a new list of tableaus
repeat 7 times
	get a new tableau 
	add it to the tableaus
	add it to droppable-piles
 	add it to auto-play-piles


to deal the cards
	shuffle the deck
	for each card in the deck
		turn the card face down
		move the card to the stock
	for row from 1 to 7
		turn the bottom card of the stock face up
		for column from row to 7
			move the bottom card of the stock to item column of the tableaus

to reset stock
	set cards to cards in discards starting with the first card in discards
	reverse the cards
	for each card in cards
		turn the card face down
		move it to the stock
		
to turn over stock
	if the stock is empty reset stock
	repeat 1 time  // TODO: `repeat 3 times` for some versions of klondike
		if the stock is not empty
			turn the bottom card of stock face up
			move the bottom card of stock to the discards

to play (a card)
	// make sure we can pick up the card
	set old-pile to the pile of the card
	if old-pile cannot pick up the card return no
	print "can pick up the " + the name of the card
	
	if old-pile is the stock
		return turn over stock
	
	set valid-piles to piles in droppable-piles where the pile can play the card
	set new-pile to the first pile in valid-piles
	if new-pile is not defined return no
	print new-pile

	// move cards if we got a new-pile
	set cards-to-move to cards in old-pile starting with the card
	for each card in cards-to-move
		move it to new-pile

	// turn over last tableau card if necessary
	if the old-pile is a tableau and the old-pile is not empty
		turn the last card of the old-pile face up

	// update score
	if new-pile is a foundation
		set the score of the game to the score of the game + 10
	else if old-pile is discards
		set the score of the game to the score of the game + 5
	print the score of the game
	return yes

to auto-play
	for each pile in auto-play-piles
		play the bottom card of the pile

to reset the game
	set the score of the game to 0
	deal the cards
	repeat 3 times
		turn over stock

##############
## rendering the bits

// note: tableaus just draw as a (vertical) list of cards

to draw (a foundation):
	if it is empty
		if its suit is clubs return <div className="Card Placeholder ui button basic compact fluid black">♣️</div>
		if its suit is diamonds return <div className="Card Placeholder ui button basic compact fluid red">♦️</div>
		if its suit is hearts return <div className="Card Placeholder ui button basic compact fluid red">♥️</div>
		if its suit is spades return <div className="Card Placeholder ui button basic compact fluid black">♠️</div>
	return draw its bottom card

to draw (a stock-pile):
	if it is empty
		return <div onClick={turn over stock} className="Card Placeholder ui button basic compact fluid"></div>
	return draw its bottom card

to draw (a discard-pile):
	if it is empty
		return <div onClick={turn over stock} className="Card Placeholder ui button basic compact fluid"></div>
	return draw its bottom card

to draw (a card):
	set className to "Card face-" + its direction + " "	+ its rank + " " + its suit + " ui button compact fluid "
	if it is face down 
		return <div onClick={play the card} className={className}><i className="fitted bicycle icon"/></div>
	return <div onClick={play the card} className={className +	its color}>{display the card}</div>

##############
## Set up card game
to draw (a card-game)
	print warning "redrawing game"
 	return <div>
		<div className="board">
			<table className="ui table fixed">
				<thead>
					<tr>
						<th colSpan="2"><h4>Klondike</h4></th>
						<th colSpan="2" className="right aligned">Score:</th>
						<th>{the score of the game}</th>
						<th><div className="tiny fluid ui button compact" onClick={auto-play}>Auto</div></th>
						<th><div className="tiny fluid ui button compact" onClick={reset the game}>Restart</div></th>
					</tr>
				</thead>
				<tbody>
				<tr>
						<td>{draw the stock}</td>
						<td>{draw the discards}</td>
						<td></td>
						<td>{draw item 1 of the foundations}</td>
						<td>{draw item 2 of the foundations}</td>
						<td>{draw item 3 of the foundations}</td>
						<td>{draw item 4 of the foundations}</td>
				</tr>
				<tr>
						<td>{draw item 1 of the tableaus}</td>
						<td>{draw item 2 of the tableaus}</td>
						<td>{draw item 3 of the tableaus}</td>
						<td>{draw item 4 of the tableaus}</td>
						<td>{draw item 5 of the tableaus}</td>
						<td>{draw item 6 of the tableaus}</td>
						<td>{draw item 7 of the tableaus}</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	
reset the game
start the game

