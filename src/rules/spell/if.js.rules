with spell/english/core
with spell/english/expression
with spell/english/statement

statement if
    english
        if {condition:expression} (then|:) {statements}?"
    JS
        if ($condition) $statements
    tests english => JS
        if a then => if (a) {}
        if a then b = 1 => if (a) { b = 1 }
        if a: b = 1 => if (a) { b = 1 }
        if a : b = 1 => if (a) { b = 1 }
        if a\n\tb = 1 => if (a) {\n\tb = 1\n}
        if a\n\tb = 1\n\tc = 2 => if (a) {\n\tb = 1\n\tc = 2\n}

statement else_if
    english
        (else|otherwise) if ${condition:expression} (then|:) {statements}?
    JS
        else if ($condition) $statements
    tests english => JS
        else if a then => else if (a) {}
        else if a: => else if (a) {}
        else if a : => else if (a) {}
        else if a then b = 1 => else if (a) { b = 1 }
        else if a: b = 1 => else if (a) { b = 1 }
        else if a\n\tb = 1 => else if (a) {\n\tb = 1\n}
        else if a\n\tb = 1\n\tc = 1 => else if (a) {\n\tb = 1\n\tc = 1\n}


statement else
    english
        (else|otherwise) (:)? {statements}?
    JS
        else $statements
    tests english => JS
        else => else {}
        else b = 1 => else { b = 1 }
        else: b = 1 => else { b = 1 }
        else : b = 1 => else { b = 1 }
        else\n\tb = 1 => else {\n\tb = 1\n}
        else:\n\tb = 1 => else {\n\tb = 1\n}
        else\n\tb = 1\n\tc = 1 => else {\n\tb = 1\n\tc = 1\n}

statement backwards_if
    english
        {statement} if {condition:expression}
    JS
        if ($condition) { $statement }
    tests english => JS
        b = 1 if a => if (a) { b = 1 }

statement backwards_if_else
    english
        {statement} if {condition:expression} (else|otherwise) {elseStatement:statement})?
    JS
        if ($condition) { $statement }
        else { $elseStatement }
    tests english => JS
        b = 1 if a else b = 2 => if (a) { b = 1 }\nelse{ b = 2 }
        b = 1 if a otherwise b = 2 => if (a) { b = 1 }\nelse{ b = 2 }
